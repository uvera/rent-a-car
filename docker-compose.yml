networks:
  racs:
    name: racs
services:
  rails-app:
    container_name: rails-app
    depends_on:
      minio:
        condition: service_started
      postgres:
        condition: service_healthy
    build:
      context: ./
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - RAILS_SERVE_STATIC_FILES=yes
      - MINIO_KEY
      - MINIO_SECRET
      - MINIO_URL=http://minio:9000
      - DATABASE_URL=postgresql://postgres:5432
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_USER=${POSTGRES_USER}
      - SECRET_KEY_BASE
      - RAILS_LOG_TO_STDOUT=yes
    networks:
      racs:
        aliases:
          - rails
  minio:
    image: quay.io/minio/minio:RELEASE.2023-01-18T04-36-38Z.fips
    container_name: minio-racs
    command: server --console-address ":9001" /data
    volumes:
      - minio:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET}
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      racs:
        aliases:
          - minio
  postgres:
    image: postgres:15
    container_name: postgres-racs
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-citext-extension.sh:/docker-entrypoint-initdb.d/init-citext-extension.sh
    networks:
      racs:
        aliases:
          - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
volumes:
  postgres:
    driver: local
  minio:
    driver: local


